"""add all table

Revision ID: 45937ecf0df8
Revises:
Create Date: 2024-01-22 21:46:45.462679

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '45937ecf0df8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('fastapi_auth_group',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=150), nullable=True, comment='group name'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_fastapi_auth_group_id'), 'fastapi_auth_group', ['id'], unique=False)
    op.create_index(op.f('ix_fastapi_auth_group_name'), 'fastapi_auth_group', ['name'], unique=True)
    op.create_table(
        'directions', sa.Column(
            'id', sa.Integer(), autoincrement=True, nullable=False), sa.Column(
            'arrival_city_id', sa.Integer(), nullable=False), sa.Column(
                'departure_city_id', sa.Integer(), nullable=False), sa.Column(
                    'is_active', sa.Boolean(), nullable=True), sa.Column(
                        'transportation_type', postgresql.ENUM(
                            'AIR', 'SEA', 'RAIL', 'ROAD', name='transportationtype'), nullable=False), sa.Column(
                                'created_at', sa.DateTime(), nullable=True), sa.Column(
                                    'updated_at', sa.DateTime(), nullable=True), sa.ForeignKeyConstraint(
                                        ['arrival_city_id'], ['cities.id'], ), sa.ForeignKeyConstraint(
                                            ['departure_city_id'], ['cities.id'], ), sa.PrimaryKeyConstraint('id'))
    op.create_table('districts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('city_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('fastapi_auth_permission',
                    sa.Column('name', sa.String(length=128), nullable=True, comment='Permission Name'),
                    sa.Column('codename', sa.String(length=100), nullable=False, comment='Permission Field'),
                    sa.Column('group_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['group_id'], ['fastapi_auth_group.id'], ),
                    sa.PrimaryKeyConstraint('codename')
                    )
    op.create_index(op.f('ix_fastapi_auth_permission_name'), 'fastapi_auth_permission', ['name'], unique=True)
    op.create_table('shipping',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('price', sa.DECIMAL(precision=9, scale=2), nullable=False),
                    sa.Column('address', sa.String(), nullable=False),
                    sa.Column('cargo_weight', sa.Float(), nullable=False),
                    sa.Column('cargo_volume', sa.Float(), nullable=False),
                    sa.Column('status', postgresql.ENUM('FINISHED', 'IN_TRANSIT', 'CANCELED', 'NEW', 'WAITING_DRIVER', name='shippingstatus'), nullable=False),
                    sa.Column('shipping_type', postgresql.ENUM('AIR', 'SEA', 'RAIL', 'ROAD', name='transportationtype'), nullable=False),
                    sa.Column('number_train', sa.String(), nullable=True),
                    sa.Column('number_air', sa.String(), nullable=True),
                    sa.Column('count', sa.Integer(), nullable=True),
                    sa.Column('arrival_city_id', sa.Integer(), nullable=False),
                    sa.Column('departure_city_id', sa.Integer(), nullable=False),
                    sa.Column('driver_id', sa.Integer(), nullable=True),
                    sa.Column('departure_date', sa.Date(), nullable=True),
                    sa.Column('arrival_date', sa.Date(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['arrival_city_id'], ['cities.id'], ),
                    sa.ForeignKeyConstraint(['departure_city_id'], ['cities.id'], ),
                    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], use_alter=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(), nullable=True),
                    sa.Column('last_name', sa.String(), nullable=True),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('phone', sa.String(), nullable=True),
                    sa.Column('hashed_password', sa.String(), nullable=True),
                    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='Are you a super administrator'),
                    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=True, comment='Whether to engrave to log in'),
                    sa.Column('is_delete', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='delete or not'),
                    sa.Column('group_id', sa.Integer(), nullable=True),
                    sa.Column('creator', sa.Integer(), nullable=True),
                    sa.Column('salary', sa.DECIMAL(precision=10, scale=2), nullable=True),
                    sa.Column('city', sa.Integer(), nullable=True),
                    sa.Column('longitude', sa.Float(), nullable=True),
                    sa.Column('latitude', sa.Float(), nullable=True),
                    sa.Column('car_mark', sa.String(), nullable=True),
                    sa.Column('car_plate_number', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['city'], ['cities.id'], ),
                    sa.ForeignKeyConstraint(['creator'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['group_id'], ['fastapi_auth_group.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('email_code',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(length=100), nullable=False, comment='email'),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('code', sa.String(length=100), nullable=False, comment='code'),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_email_code_id'), 'email_code', ['id'], unique=False)
    op.create_table('expenses',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
                    sa.Column('creator', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['creator'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('fastapi_auth_group_permission',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('group_id', sa.Integer(), nullable=True),
                    sa.Column('codename', sa.String(length=100), nullable=True),
                    sa.ForeignKeyConstraint(['codename'], ['fastapi_auth_permission.codename'], ),
                    sa.ForeignKeyConstraint(['group_id'], ['fastapi_auth_group.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('group_id', 'codename', name='idx_group_id_permission_id')
                    )
    op.create_index(op.f('ix_fastapi_auth_group_permission_id'), 'fastapi_auth_group_permission', ['id'], unique=False)
    op.create_table('warehouses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('address', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('city', sa.Integer(), nullable=False),
                    sa.Column('district', sa.Integer(), nullable=True),
                    sa.Column('warehouse_user', sa.Integer(), nullable=True),
                    sa.Column('status', sa.Boolean(), server_default='false', nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['city'], ['cities.id'], ),
                    sa.ForeignKeyConstraint(['district'], ['districts.id'], ),
                    sa.ForeignKeyConstraint(['warehouse_user'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('orders',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('creator', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('address', sa.String(), nullable=False),
                    sa.Column('courier', sa.Integer(), nullable=True),
                    sa.Column('sender_fio', sa.String(), nullable=False),
                    sa.Column('sender_phone', sa.String(), nullable=False),
                    sa.Column('reciever_fio', sa.String(), nullable=False),
                    sa.Column('reciever_phone', sa.String(), nullable=False),
                    sa.Column('order_status', sa.String(), nullable=False),
                    sa.Column('insurance', sa.DECIMAL(precision=10, scale=2), nullable=False),
                    sa.Column('total_weight', sa.Float(), nullable=False),
                    sa.Column('total_volume', sa.Float(), nullable=False),
                    sa.Column('warehouse_id', sa.Integer(), nullable=True),
                    sa.Column('direction_id', sa.Integer(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('public_offer_url', sa.String(), nullable=True),
                    sa.Column('driver_contract_url', sa.String(), nullable=True),
                    sa.Column('is_public_offer_accepted', sa.Boolean(), server_default=sa.text('false'), nullable=True),
                    sa.Column('is_driver_contract_accepted', sa.Boolean(), server_default=sa.text('false'), nullable=True),
                    sa.ForeignKeyConstraint(['courier'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['creator'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['direction_id'], ['directions.id'], ),
                    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('order_expenses',
                    sa.Column('order_id', sa.Integer(), nullable=True),
                    sa.Column('expense_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], ),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], )
                    )
    op.create_table('order_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.Column('photo', sa.String(), nullable=True),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.Column('qr_code_hash', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('otp_signing_code',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('order_id', sa.Integer(), nullable=True),
                    sa.Column('code', sa.String(length=100), nullable=False, comment='code'),
                    sa.Column('phone', sa.String(length=100), nullable=False, comment='phone'),
                    sa.Column('is_used', sa.Boolean(), server_default=sa.text('false'), nullable=True, comment='Whether to use it or not'),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_otp_signing_code_id'), 'otp_signing_code', ['id'], unique=False)
    op.create_table('payments',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.Column('amount', sa.Integer(), nullable=False),
                    sa.Column('currency', sa.String(), nullable=False),
                    sa.Column('payment_status', sa.String(), nullable=False),
                    sa.Column('payment_type', sa.String(), nullable=False),
                    sa.Column('payer_type', sa.String(), nullable=False),
                    sa.Column('bin', sa.String(), nullable=False),
                    sa.Column('payment_date', sa.DateTime(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_index(op.f('ix_otp_signing_code_id'), table_name='otp_signing_code')
    op.drop_table('otp_signing_code')
    op.drop_table('order_items')
    op.drop_table('order_expenses')
    op.drop_table('orders')
    op.drop_table('warehouses')
    op.drop_index(op.f('ix_fastapi_auth_group_permission_id'), table_name='fastapi_auth_group_permission')
    op.drop_table('fastapi_auth_group_permission')
    op.drop_table('expenses')
    op.drop_index(op.f('ix_email_code_id'), table_name='email_code')
    op.drop_table('email_code')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('shipping')
    op.drop_index(op.f('ix_fastapi_auth_permission_name'), table_name='fastapi_auth_permission')
    op.drop_table('fastapi_auth_permission')
    op.drop_table('districts')
    op.drop_table('directions')
    op.drop_index(op.f('ix_fastapi_auth_group_name'), table_name='fastapi_auth_group')
    op.drop_index(op.f('ix_fastapi_auth_group_id'), table_name='fastapi_auth_group')
    op.drop_table('fastapi_auth_group')
    op.drop_table('cities')
    # ### end Alembic commands ###
